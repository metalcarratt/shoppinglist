{"version":3,"sources":["shoppinglist/ShoppingListItem.jsx","shoppinglist/ShoppingList.jsx","store/shoppingListsSlice.js","shoppinglist/ShoppingListProvider.jsx","pages/AllShoppingLists.jsx","pages/SpecificShoppingList.jsx","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["ShoppingListItem","index","item","onClick","className","ShoppingList","list","name","solo","useState","newItem","setNewItem","to","icon","faShare","faHome","items","map","itemIndex","remove","type","value","onChange","event","target","placeholder","add","undo","itemsSlice","createSlice","initialState","reducers","addList","state","action","payload","listName","addItem","push","pop","removeItem","startIndex","indexOf","splice","actions","ShoppingListProvider","window","console","log","useSelector","dispatch","useDispatch","LIST_NAME","AllShoppingLists","names","Object","keys","filter","key","startsWith","SpecificShoppingList","useParams","configureStore","reducer","itemsReducer","App","store","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4b0f322.chunk.js","sourcesContent":["export default function ShoppingListItem({index, item, onClick}) {\r\n    return (\r\n        <li key={item} onClick={() => onClick()}>\r\n            <span className=\"ordinal\">{ index + '. ' }</span>\r\n            <span className=\"title\">{ item }</span>\r\n        </li>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport ShoppingListItem from './ShoppingListItem';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faShare, faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ShoppingList({list, name, solo}) {\r\n    const [newItem, setNewItem] = useState('');\r\n    \r\n    const handleChange = function(event) {\r\n        setNewItem(event.target.value);\r\n    }\r\n\r\n    const addItem = function() {\r\n        list.add(newItem);\r\n        setNewItem('');\r\n    }\r\n\r\n    return (\r\n        <div className={'shoppingList' + (solo ? ' solo' : '')}>\r\n            <h1>\r\n                {name}\r\n                { !solo &&\r\n                    <Link to={`/list/${name}`}>\r\n                        <FontAwesomeIcon icon={faShare} />\r\n                    </Link>    \r\n                }\r\n                { solo &&\r\n                    <Link to=\"/\">\r\n                        <FontAwesomeIcon icon={faHome} />\r\n                    </Link>    \r\n                }                \r\n            </h1>\r\n            <ul>\r\n                { list.items.map((item, itemIndex) => (\r\n                    <ShoppingListItem\r\n                        index={itemIndex + 1}\r\n                        key={itemIndex}\r\n                        item={item}\r\n                        onClick={() => list.remove(item)}\r\n                    />\r\n                ))}\r\n            </ul>\r\n            <div className=\"newItem\">\r\n                <input type=\"text\" value={newItem} onChange={handleChange} placeholder=\"New Item\" />\r\n                <button onClick={addItem}>Add</button>\r\n                <button onClick={() => list.undo()}>Undo</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const itemsSlice = createSlice({\r\n    name: 'items',\r\n    initialState: {\r\n        \"Shopping List 1\": ['Milk', 'Bread', 'Bottled water'],\r\n        index: 1\r\n    },\r\n    reducers: {\r\n        addList: (state, action) => {\r\n            state[action.payload.listName] = [];\r\n            state.index++;\r\n        },\r\n\r\n        addItem: (state, action) => {\r\n            state[action.payload.listName].push(action.payload.item)\r\n        },\r\n\r\n        undo: (state, action) => {\r\n            state[action.payload.listName].pop();\r\n        },\r\n\r\n        removeItem: (state, action) => {\r\n            const startIndex = state[action.payload.listName].indexOf(action.payload.item);\r\n            state[action.payload.listName].splice(startIndex, 1);\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addItem, undo, removeItem, addList } = itemsSlice.actions;\r\n\r\nexport default itemsSlice.reducer;","import ShoppingList from './ShoppingList';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addItem, undo, removeItem } from '../store/shoppingListsSlice';\r\n\r\nexport default function ShoppingListProvider({listName, solo}) {\r\n    window.console.log(`ShoppingListProvider with listName=${listName}`);\r\n    const items = useSelector((state) => state.items[listName]);\r\n    const dispatch = useDispatch();\r\n\r\n    const list = {\r\n        items,\r\n\r\n        add(item) {\r\n            dispatch(addItem({item, listName}));       \r\n        },\r\n\r\n        remove(item) {\r\n            dispatch(removeItem({item, listName}));\r\n        },\r\n\r\n        undo() {\r\n            dispatch(undo({listName}));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ShoppingList list={list} name={listName} solo={solo} />\r\n    );\r\n}","import ShoppingListProvider from '../shoppinglist/ShoppingListProvider';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addList } from '../store/shoppingListsSlice';\r\n\r\nconst LIST_NAME = \"Shopping List\";\r\n\r\nexport default function AllShoppingLists() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const names = useSelector((state) => Object.keys(state.items).filter(key => key.startsWith(LIST_NAME)));\r\n    const index = useSelector((state) => state.items.index);\r\n\r\n    const newList = function() {\r\n        window.console.log(\"new list called\");\r\n        const listName = LIST_NAME + \" \" + (index + 1);\r\n        dispatch(addList({listName}));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { names.map((name, index) => (\r\n                <ShoppingListProvider listName={name} key={index} />\r\n            ))}\r\n            <div className=\"actions\">\r\n                <button onClick={newList}>New List</button>\r\n            </div>\r\n        </>\r\n    );\r\n}","import ShoppingListProvider from '../shoppinglist/ShoppingListProvider';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function SpecificShoppingList() {\r\n    const { listName } = useParams();\r\n    return (\r\n        <ShoppingListProvider listName={listName} solo={true} />\r\n    );\r\n}","import { configureStore } from '@reduxjs/toolkit';\r\nimport itemsReducer from './shoppingListsSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        items: itemsReducer\r\n    }\r\n});","\nimport AllShoppingLists from './pages/AllShoppingLists';\nimport SpecificShoppingList from './pages/SpecificShoppingList';\nimport store from './store/store.js';\nimport { Provider } from 'react-redux';\nimport './ShoppingList.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/list/:listName\">\n              <SpecificShoppingList />\n            </Route>\n            <Route path=\"/\">\n              <AllShoppingLists />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}