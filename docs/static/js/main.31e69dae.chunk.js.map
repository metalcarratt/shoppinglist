{"version":3,"sources":["store/itemsSlice.js","ShoppingList.jsx","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["itemsSlice","createSlice","name","initialState","reducers","addItem","state","action","push","payload","undo","pop","removeItem","splice","indexOf","actions","ShoppingList","items","useSelector","dispatch","useDispatch","useState","newItem","setNewItem","className","map","item","itemIndex","onClick","type","value","onChange","event","target","placeholder","configureStore","reducer","itemsReducer","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAEaA,EAAaC,YAAY,CAClCC,KAAM,QACNC,aAAc,CACV,OAAQ,QAAS,iBAErBC,SAAU,CACNC,QAAS,SAACC,EAAOC,GACbD,EAAME,KAAKD,EAAOE,UAGtBC,KAAM,SAACJ,GACHA,EAAMK,OAGVC,WAAY,SAACN,EAAOC,GAChBD,EAAMO,OAAOP,EAAMQ,QAAQP,EAAOE,SAAU,O,EAKXT,EAAWe,QAAzCV,E,EAAAA,QAASK,E,EAAAA,KAAME,E,EAAAA,WAEfZ,IAAf,Q,OCnBe,SAASgB,IACpB,IAAMC,EAAQC,aAAY,SAACZ,GAAD,OAAWA,EAAMW,SAErCE,EAAWC,cAHkB,EAKLC,mBAAS,IALJ,mBAK5BC,EAL4B,KAKnBC,EALmB,KAgBnC,OACI,sBAAKC,UAAU,eAAf,UACI,+CACA,6BAEQP,EAAMQ,KAAI,SAACC,EAAMC,GAAP,OACN,qBAAeC,QAAS,kBAAMT,EAASP,EAAWc,KAAlD,UACI,sBAAMF,UAAU,UAAhB,SAA6BG,EAAY,EAAK,OAC9C,sBAAMH,UAAU,QAAhB,SAA0BE,MAFrBA,QAMrB,sBAAKF,UAAU,UAAf,UACI,uBAAOK,KAAK,OAAOC,MAAOR,EAASS,SAtB1B,SAASC,GAC1BT,EAAWS,EAAMC,OAAOH,QAqB2CI,YAAY,aACvE,wBAAQN,QAnBD,WACfT,EAASd,EAAQiB,IACjBC,EAAW,KAiBH,iBACA,wBAAQK,QAAS,kBAAMT,EAAST,MAAhC,wBCjCDyB,kBAAe,CAC1BC,QAAS,CACLnB,MAAOoB,KCSAC,MAVf,WACE,OACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,SCIOgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.31e69dae.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const itemsSlice = createSlice({\r\n    name: 'items',\r\n    initialState: [\r\n        'Milk', 'Bread', 'Bottled Water'\r\n    ],\r\n    reducers: {\r\n        addItem: (state, action) => {\r\n            state.push(action.payload)\r\n        },\r\n\r\n        undo: (state) => {\r\n            state.pop();\r\n        },\r\n\r\n        removeItem: (state, action) => {\r\n            state.splice(state.indexOf(action.payload), 1);\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addItem, undo, removeItem } = itemsSlice.actions;\r\n\r\nexport default itemsSlice.reducer;","import React, { useState } from 'react';\r\nimport './ShoppingList.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addItem, undo, removeItem } from './store/itemsSlice';\r\n\r\nexport default function ShoppingList() {\r\n    const items = useSelector((state) => state.items);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [newItem, setNewItem] = useState('');\r\n    \r\n    const handleChange = function(event) {\r\n        setNewItem(event.target.value);\r\n    }\r\n\r\n    const addItemInt = function() {\r\n        dispatch(addItem(newItem))\r\n        setNewItem('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"shoppingList\">\r\n            <h1>Shopping List</h1>\r\n            <ul>\r\n                { \r\n                    items.map((item, itemIndex) => (\r\n                        <li key={item} onClick={() => dispatch(removeItem(item))}>\r\n                            <span className=\"ordinal\">{ (itemIndex + 1) + '. ' }</span>\r\n                            <span className=\"title\">{ item }</span>\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n            <div className=\"newItem\">\r\n                <input type=\"text\" value={newItem} onChange={handleChange} placeholder=\"New Item\" />\r\n                <button onClick={addItemInt}>Add</button>\r\n                <button onClick={() => dispatch(undo())}>Undo</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { configureStore } from '@reduxjs/toolkit';\r\nimport itemsReducer from './itemsSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        items: itemsReducer\r\n    }\r\n});","import ShoppingList from './ShoppingList';\nimport store from './store/store.js';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <ShoppingList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}